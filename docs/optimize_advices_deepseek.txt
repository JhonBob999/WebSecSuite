‚ö†Ô∏è –ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏:
–û–ø–∞—Å–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ –∫–æ–¥–µ:

cpp
// scraper.cpp
void Scraper::add_task(TaskPtr task) {
    tasks_.push_back(std::move(task)); // Race condition –ø—Ä–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ
}
–†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å std::lock_guard

–£—Ç–µ—á–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤:

cpp
// task.cpp
CURL* curl = curl_easy_init();
// –ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ curl_easy_perform() == CURLE_OK
curl_easy_cleanup(curl); // –ù–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è—Ö
–†–µ—à–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RAII-–æ–±—ë—Ä—Ç–∫—É —Ç–∏–ø–∞ std::unique_ptr<CURL, CurlDeleter>

–ü—Ä–æ–±–ª–µ–º—ã –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç–∏:

–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä thread-pool (hardcoded 4 –ø–æ—Ç–æ–∫–∞)

–ù–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º–∞ backpressure –ø—Ä–∏ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–µ

–û—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á –±–µ–∑ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤

HTTP-—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è:

–ù–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ HTTP/2 (libcurl –≤–∫–ª—é—á—ë–Ω –±–µ–∑ NGHTTP2)

–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç–∞–π–º–∞—É—Ç–æ–≤ –Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (CURLOPT_CONNECTTIMEOUT)

–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ (CURLOPT_FOLLOWLOCATION)

üí° –ö–ª—é—á–µ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç—å—é:

cpp
// –î–æ–±–∞–≤–∏—Ç—å –≤ Task:
curl_easy_setopt(curl, CURLOPT_PIPEWAIT, 1L); // HTTP pipelining
curl_easy_setopt(curl, CURLOPT_TCP_FASTOPEN, 1L);
curl_easy_setopt(curl, CURLOPT_SSL_ENABLE_ALPN, 1L);
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –≤–º–µ—Å—Ç–æ –ø—É–ª–∞ –ø–æ—Ç–æ–∫–æ–≤:

cpp
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å libuv –∏–ª–∏ Boost.Asio
uv_work_t* req = new uv_work_t;
uv_queue_work(uv_default_loop(), req, 
    [](uv_work_t*){ /* –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ */ },
    [](uv_work_t*, int){ /* –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */ }
);
–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:

–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ Protocol Buffers

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ cookie-—Ñ–∞–π–ª–æ–≤ (AES-256-GCM)

–í–≤–µ—Å—Ç–∏ sandbox –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤ (WebAssembly)

–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞:

cpp
// –ó–∞–º–µ–Ω–∏—Ç—å regex –Ω–∞ SIMD-–ø–∞—Ä—Å–µ—Ä —Ç–∏–ø–∞
#include <xsimd/xsimd.hpp>

void parse_html(const std::string& html) {
    xsimd::batch<uint8_t> tag_open = xsimd::load_unaligned("<a href=\"");
    // ... –≤–µ–∫—Ç–æ—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
}
üöÄ –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è:
–≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤—ã–π –¥–≤–∏–∂–æ–∫ (2 –Ω–µ–¥–µ–ª–∏)

–ü–æ–¥–∫–ª—é—á–∏—Ç—å libuv –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ I/O

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å HTTP/3 —á–µ—Ä–µ–∑ quiche

–î–æ–±–∞–≤–∏—Ç—å benchmark-—Ç–µ—Å—Ç—ã (google/benchmark)

–≠—Ç–∞–ø 2: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (1 –Ω–µ–¥–µ–ª—è)

–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenSSL/BoringSSL

–†–µ–∞–ª–∏–∑–∞—Ü–∏—è WAF-—Ñ–∏–ª—å—Ç—Ä–æ–≤

–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Tor (libtor)

–≠—Ç–∞–ø 3: –†–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å (3 –Ω–µ–¥–µ–ª–∏)

–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ (Lua/Python)

–ü–æ–¥–¥–µ—Ä–∂–∫–∞ WebAssembly –º–æ–¥—É–ª–µ–π

GraphQL API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

üìù –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ ToDo:
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:

–î–æ–±–∞–≤–∏—Ç—å fuzzing-—Ç–µ—Å—Ç—ã (libFuzzer)

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–µ—Ç–µ–≤—É—é —Å–∏–º—É–ª—è—Ü–∏—é (tc netem)

–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (OWASP ZAP)

–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:

–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Doxygen-–¥–æ–∫—É

–î–æ–±–∞–≤–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Å—Ö–µ–º—ã

–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:

–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ DNS (c-ares)

–ü—Ä–µ–¥–≤—ã–±–æ—Ä–∫–∞ SSL-—Å–µ—Å—Å–∏–π

–í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞

üîë –ö–ª—é—á–µ–≤–æ–π —Å–æ–≤–µ—Ç:
–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—å–Ω–æ–≥–æ —è–¥—Ä–∞ (core-lib), –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç UI. –≠—Ç–æ –æ—Ç–∫—Ä–æ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è:

–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ CI/CD —Å–∏—Å—Ç–µ–º—ã

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö

–°–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —É—Ç–∏–ª–∏—Ç—ã

–¢–≤–æ–π –ø–æ–¥—Ö–æ–¥ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –Ω–∞ C++/Qt –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤–µ—Ä–µ–Ω. –î–ª—è —Å–µ—Ç–µ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å—Ç–æ—Ä–æ–Ω—É:

Boost.Beast –¥–ª—è HTTP

QtNetwork –¥–ª—è SSL-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

Mimalloc –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∞–ª–ª–æ–∫–∞—Ü–∏–π